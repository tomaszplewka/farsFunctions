ggplot(worldcup, aes(x = Time, y = Passes)) +
geom_point()
ggplot(worldcup, aes(x = Time, y = Passes,
color = Position, size = Shots)) +
geom_point()
library(dplyr)
noteworthy_players <- worldcup %>% filter(Shots == max(Shots) |
Passes == max(Passes)) %>%
mutate(point_label = paste(Team, Position, sep = ", "))
noteworthy_players
head(worldcup)
noteworthy_players <- worldcup %>% filter(Shots == max(Shots) |
Passes == max(Passes)) %>%
mutate(point_label = paste(Team, Position, sep = ", "))
noteworthy_players
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point() +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward")
ggplot(worldcup, aes(x = Time)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 90 * 0:6,
color = "blue", alpha = 0.5)
library(titanic)
data("titanic_train", package = "titanic")
titanic <- titanic_train
library(faraway)
data("worldcup")
?worldcup
library(ggplot2)
library(magrittr)
ggplot(data = titanic, aes(x = Fare)) +
geom_histogram()
# equivalent
ggplot(data = titanic) +
geom_histogram(aes(x = Fare))
# equivalent
ggplot() +
geom_histogram(data = titanic, aes(x = Fare))
# equivalent using piping
titanic %>%
ggplot() +
geom_histogram(aes(x = Fare))
# or
titanic %>%
ggplot(aes(x = Fare)) +
geom_histogram()
ggplot(titanic, aes(x = Fare)) +
geom_histogram(bins = 15)
# or
titanic %>%
ggplot(aes(x = Fare)) +
geom_histogram()
ggplot(titanic, aes(x = Fare)) +
geom_histogram(bins = 15)
ggplot(worldcup, aes(x = Time, y = Passes)) +
geom_point()
ggplot(worldcup, aes(x = Time, y = Passes,
color = Position, size = Shots)) +
geom_point()
library(dplyr)
noteworthy_players <- worldcup %>% filter(Shots == max(Shots) |
Passes == max(Passes)) %>%
mutate(point_label = paste(Team, Position, sep = ", "))
noteworthy_players
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point() +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward")
ggplot(worldcup, aes(x = Time)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 90 * 0:6,
color = "blue", alpha = 0.5)
# Customizing plots
library(dplyr)
library(ggplot2)
library(gridExtra)
library(ggthemes)
library(faraway)
data("nepali")
data("worldcup")
library(dlnm)
data("chicagoNMMAPS")
chic <- chicagoNMMAPS
chic_july <- chic %>%
filter(month = 7 & year == 1995)
chic_july <- chic %>%
filter(month == 7 & year == 1995)
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_classic()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_linedraw()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_bw()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_minimal()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_void()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_dark()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_classic()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_few()
ggplot(worldcup, aes(x = Time, y = Shots)) +
geom_point() +
theme_tufte()
chicago_plot <- ggplot(chic_july, aes(x = date, y = death)) +
xlab("Day in July 1995") +
ylab("All-cause deaths") +
ylim(0, 450)
chicago_plot +
geom_area(fill = "black") +
theme_excel()
chicago_plot +
geom_line() +
theme_tufte()
wc_example_data %>%
mutate(Pos = fct_recode(Pos,
"Defender" = "DC",
"Forward" = "FW",
"Goalkeeper" = "GK",
"Midfielder" = "MF")) %>%
ggplot(aes(x = Pos)) +
geom_bar(fill = "lightgray") +
xlab("") +
ylab("Number of players") +
coord_flip() +
theme_tufte()
library(forcats)
# Create a messier example version of the data
wc_example_data <- worldcup %>%
dplyr::rename(Pos = Position) %>%
mutate(Pos = fct_recode(Pos,
"DC" = "Defender",
"FW" = "Forward",
"GK" = "Goalkeeper",
"MF" = "Midfielder"))
wc_example_data %>%
ggplot(aes(x = Pos)) +
geom_bar()
wc_example_data %>%
mutate(Pos = fct_recode(Pos,
"Defender" = "DC",
"Forward" = "FW",
"Goalkeeper" = "GK",
"Midfielder" = "MF")) %>%
ggplot(aes(x = Pos)) +
geom_bar(fill = "lightgray") +
xlab("") +
ylab("Number of players") +
coord_flip() +
theme_tufte()
ggplot(filter(worldcup, Position == "Forward"), aes(x = Passes, y = Shots)) +
geom_point(size = 1.5) +
theme_few() +
geom_smooth()
noteworthy_players <- worldcup %>%
filter(Shots == max(Shots) | Passes == max(Passes)) %>%
mutate(point_label = paste0(Team, Position, sep = ", "))
noteworthy_players
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point(alpha = 0.5) +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward", color = "blue") +
theme_few()
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point() +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward", color = "blue") +
theme_few()
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point(alpha = 1) +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward", color = "blue") +
theme_few()
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point(alpha = 0.5) +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward", color = "blue") +
theme_few()
ggplot(worldcup, aes(x = Passes, y = Shots)) +
geom_point(alpha = 0.1) +
geom_text(data = noteworthy_players, aes(label = point_label),
vjust = "inward", hjust = "inward", color = "blue") +
theme_few()
worldcup %>%
ggplot(aes(x = Time, y = Shots, color = Position)) +
geom_point()
worldcup %>%
ggplot(aes(x = Time, y = Shots)) +
geom_point() +
facet_grid(. ~ Position)
worldcup %>%
ggplot(aes(x = Time, y = Shots)) +
geom_point() +
#facet_grid(. ~ Position)
facet_wrap(. ~ Position)
worldcup %>%
filter(Team %in% c("Spain", "Netherlands")) %>%
ggplot(aes(x = Time, y = Shots)) +
geom_point() +
facet_grid(Team ~ Position)
worldcup %>%
ggplot(aes(x = Time, y = Shots)) +
geom_point(alpha = 0.25) +
facet_wrap(~ Team, ncol = 6)
nepali <- nepali %>%
mutate(sex = factor(sex, levels = c(1, 2),
labels = c("Male", "Female")))
ggplot(nepali, aes(ht, wt)) +
geom_point() +
facet_grid(. ~ sex)
nepali <- nepali %>%
mutate(sex = factor(sex, levels = c("Female", "Male")))
ggplot(nepali, aes(ht, wt)) +
geom_point() +
facet_grid(. ~ sex)
data("trees")
data("trees")
ggplot() +
geom_point(data = trees, aes(x = Girth, y = Heigth, size = Volume))
ggplot() +
geom_point(data = trees, aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot() +
geom_point(aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot(aes(x = Girth, y = Height, size = Volume)) +
geom_point()
trees %>%
ggplot() +
geom_point(x = Girth, y = Height, size = Volume)
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(aes(size = Volume))
ggplot() +
geom_point(trees, aes(x = Girth, y = Height, size = Volume))
library(ggplot2)
us_map <- map_data("state")
head(us_map, 3)
library(magrittr)
us_map %>% filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
head(us_map, 3)
us_map$region
us_map %>% filter(region %in% c("north carolina", "south carolina"))
us_map %>% filter(.$region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
filter(us_map, us_map$region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
filter(us_map, region == "north carolina")
filter(us_map, us_map$region == "north carolina")
filter(us_map, us_map$region %in% c("north carolina", "south carolina"))
filter(us_map, us_map$region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
library(dplyr)
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat)) +
geom_point()
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_path()
us_map %>%
filter(region %in% c("new york", "south carolina")) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_path()
north carolina
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_path()
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "lightblue", color = "black")
us_map %>%
filter(region %in% c("north carolina", "south carolina")) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "lightblue", color = "black") +
theme_void()
us_map %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "lightblue", color = "black") +
theme_void()
data("votes.repub")
head(votes.repub)
library(dplyr)
library(viridis)
votes.repub %>%
tbl_df() %>%
mutate(state = rownames(votes.repub),
state = tolower(state)) %>%
right_join(us_map, by = c("state" = "region")) %>%
ggplot(aes(x = long, y = lat, group = group, fill = '1976')) +
geom_polygon(color = "black") +
theme_void() +
scale_fill_viridis(name = "Republican\nvotes (%)")
votes.repub %>%
tbl_df() %>%
mutate(state = rownames(votes.repub),
state = tolower(state)) %>%
right_join(us_map, by = c("state" = "region")) %>%
ggplot(aes(x = long, y = lat, group = group, fill = `1976`)) +
geom_polygon(color = "black") +
theme_void() +
scale_fill_viridis(name = "Republican\nvotes (%)")
library(ggmap)
kozienice <- get_map("Kozienice", zoom = 12)
beijing <- get_map("Beijing", zoom = 12)
?register_google
beijing <- get_map("Beijing", zoom = 12)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
beijing <- get_map("Beijing", zoom = 12)
devtools::install_github("dkahle/ggmap")
library(ggmap)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
beijing <- get_map("Beijing", zoom = 12)
has_goog_key()
library(ggmap)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
has_goog_key()
beijing <- get_map("Beijing", zoom = 12)
devtools::install_github("dkahle/ggmap")
library(ggmap)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
has_goog_key()
getOption("ggmap")
beijing <- get_map("Beijing", zoom = 12)
geocode("Houston", output = "all")
geocode("Houston", output = "all")
ggmap(get_map("Houston"))
has_google_key()
beijing <- get_map("Beijing", zoom = 12)
geocode("Houston", output = "all")
library(ggmap)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
getOption("ggmap")
has_google_key()
beijing <- get_map("Beijing", zoom = 12)
geocode("Houston", output = "all")
ggmap(get_map("Houston"))
ggmap(
ggmap = get_map(
"Dayton",
zoom = 13, scale = "auto",
maptype = "satellite",
source = "google"),
extent = "device",
legend = "topright"
)
library(ggmap)
register_google(key = "AIzaSyBJ5bTUDKcVlJJXhzmj7L_EAYqeFv9C3iM")
getOption("ggmap")
has_google_key()
beijing <- get_map("Beijing", zoom = 12)
ggmap(beijing)
ggmap(get_map("Houston"))
ggmap(
ggmap = get_map(
"Dayton",
zoom = 13, scale = "auto",
maptype = "satellite",
source = "google"),
extent = "device",
legend = "topright"
)
kozienice <- get_map("Kozienice", zoom = 12)
ggmap(kozienice)
ggmap(beijing) +
theme_void() +
ggtitle("Beijing, China")
kozienice <- get_map("Kozienice", zoom = 12)
ggmap(kozienice)
install.packages("tigris")
install.packages("sp")
library(tigris)
library(sp)
library(tigris)
library(sp)
denver_tracts <- tracts(state = "CO", county = 31, cb = TRUE)
class(denver_tracts)
plot(denver_tracts)
bbox(denver_tracts)
is.projected(denver_tracts)
proj4string(denver_tracts)
head(denver_tracts)
head(denver_tracts@data)
roads <- primary_roads()
plot(denver_tracts, col = "lightblue")
plot(roads, add = TRUE, col = "darkred")
denver_tracts_df %>%
dplyr::select(1:4) %>% dplyr::slice(1:5)
denver_tracts_df <- fortify(denver_tracts)
library(ggplot2)
denver_tracts_df <- fortify(denver_tracts)
denver_tracts_df %>%
dplyr::select(1:4) %>% dplyr::slice(1:5)
denver_tracts_df %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "lightblue", color = "black") +
theme_void()
proj4string(denver_tracts)
library(faraway)
data(worldcup)
library(plotly)
plot_ly(worldcup, type = "scatter",
x = ~ Time, y = ~ Shots, color = ~ Position)
plot_ly(worldcup, type = "scatter",
x = ~ Time, y = ~ Shots, color = I("blue"))
worldcup %>%
mutate(Name = rownames(worldcup)) %>%
plot_ly(x = ~ Time, y = ~ Shots, color = ~ Position) %>%
add_markers(text = ~ Name, hoverinfo = "text")
worldcup %>%
mutate(Name = rownames(worldcup)) %>%
plot_ly(x = ~ Time, y = ~ Shots, color = ~ Position) %>%
add_markers(text = ~ paste("<b>Name:</b> ", Name, "<br />",
"<b>Team:</b> ", Team),
hoverinfo = "text")
worldcup %>%
plot_ly(x = ~ Time, y = ~ Shots, color = ~ Position) %>%
add_markers()
worldcup %>%
plot_ly(x = ~ Time, y = ~ Shots, z = ~ Passes,
color = ~ Position, size = I(3)) %>%
add_markers()
plot_ly(z = ~ volcano, type = "surface")
worldcup_scatter <- worldcup %>%
ggplot(aes(x = Time, y = Shots, color = Position)) +
geom_point()
ggplotly(worldcup_scatter)
install.packages("leaflet")
library(leaflet)
leaflet()
leaflet() %>%
addTiles()
library(ggplot2)
library(dplyr)
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon() +
theme_void()
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, group = group, color = Murder)) +
geom_polygon() +
theme_void()
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, fill = Murder)) +
geom_polygon() +
theme_void()
library(grid)
my_circle <- circleGrob(x = 0.5, y = 0.5, r = 0.5,
gp = gpar(col = "gray", lty = 3))
my_circle
plot(my_circle)
grid.draw(my_circle)
grid.draw(my_circle)
my_circle <- circleGrob(name = "my_circle",
x = 0.5, y = 0.5, r = 0.5,
gp = gpar(col = "gray", lty = 3))
grid.draw(my_circle)
my_rect <- rectGrob(x = 0.5, y = 0.5, width = 0.8, height = 0.3)
grid.draw(my_rect)
grid.edit("my_circle", gp = gpar(col = "red", lty = 1))
wc_plot <- ggplot(worldcup, aes(x = Time, y = Passes)) +
geom_point()
grid.draw(wc_plot)
grid.draw(wc_plot)
grid.draw(my_circle)
wc_plot
grid.force()
grid.ls()
grid.edit("geom_point.points.234", gp = gpar(col = "red"))
grid.edit("GRID.text.257", gp = gpar(fontface = "bold"))
candy <- circleGrob(r = 0.1, x = 0.5, y = 0.6)
stick <- segmentsGrob(x0 = 0.5, x1 = 0.5, y0 = 0, y1 = 0.5)
lollipop <- gTree(children = gList(candy, stick))
grid.draw(lollipop)
grid.ls(lollipop)
grid.draw(rectGrob())
sample_vp <- viewport(x = 0.5, y = 0.5,
width = 0.5, height = 0.5,
just = c("left", "bottom"))
pushViewport(sample_vp)
grid.draw(roundrectGrob())
grid.draw(lollipop)
popViewport()
